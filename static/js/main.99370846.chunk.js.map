{"version":3,"sources":["components/ContactsList.jsx","components/ContactForm.jsx","components/Filter.jsx","App.js","index.js","components/ContactsList.module.css"],"names":["ContactsList","contacts","handleDelete","className","style","list","map","el","listItem","name","number","type","deleteButton","id","onClick","ContactForm","handleSubmit","inputNameId","uuidv4","inputNumberId","useState","setName","setNumber","handleChangeAllInput","ev","target","value","form","onSubmit","e","preventDefault","label","htmlFor","input","pattern","title","required","onChange","button","Filter","handleChangeFindInput","autoComplete","App","data","localStorage","getItem","JSON","parse","setContacts","filter","setFilter","useEffect","setItem","stringify","find","alert","prev","regExp","RegExp","toLowerCase","console","table","arr","split","i","length","match","elem","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.99370846.chunk.js","sourcesContent":["import React, { } from 'react';\r\nimport style from './ContactsList.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\n\r\nexport default function ContactsList({ contacts, handleDelete }) {\r\n    \r\n        return (\r\n            <ul className={style.list}>        \r\n                {\r\n                    contacts.map(el => (<li\r\n                        className={style.listItem}\r\n                        key={el.id} >\r\n                        {el.name}:  {el.number}\r\n                        <button\r\n                            type=\"button\"\r\n                            className={style.deleteButton}\r\n                            id={el.id}\r\n                            onClick={handleDelete}\r\n                        >Delete</button>\r\n                      </li>))\r\n                }\r\n        </ul>\r\n    )\r\n}\r\n\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    handleDelete: PropTypes.func.isRequired,\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport style from './ContactsList.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\n\r\n\r\nexport default function ContactForm ({handleSubmit}) {\r\n const inputNameId = uuidv4();\r\n  const inputNumberId = uuidv4();\r\n  \r\n  const [name,setName] = useState(\"\");\r\n  const [number,setNumber] = useState(\"\");\r\n\r\n  const handleChangeAllInput = (ev) => {\r\n       \r\n    if (ev.target.name === \"name\") {\r\n      setName(ev.target.value)\r\n    } else if (ev.target.name === \"number\") {\r\n      setNumber(ev.target.value)\r\n    };\r\n  };\r\n\r\n  return (<>\r\n      <form className={style.form} onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(name,number);       \r\n        setName(\"\");\r\n        setNumber(\"\")  \r\n      }}>\r\n        <label className={style.label} htmlFor={inputNameId}>Name</label>\r\n        <input\r\n          className={style.input}\r\n          id={inputNameId}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChangeAllInput}\r\n            />\r\n            \r\n        <label className={style.label} htmlFor={inputNumberId}>Phone</label>\r\n        <input\r\n          className={style.input}\r\n          id={inputNumberId}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChangeAllInput}\r\n        />\r\n\r\n        <button className={style.button}\r\n          type=\"submit\"\r\n        >Add contact</button>\r\n      </form>\r\n    </>)\r\n}\r\n\r\nContactForm.propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired\r\n}","import style from './ContactsList.module.css';\r\nimport React, {  } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\n\r\nexport default function Filter({handleChangeFindInput}) {\r\n     return (<>\r\n            <label htmlFor=\"find\">Find contacts by name</label>\r\n            <input\r\n                className={style.input}\r\n                autoComplete=\"off\"\r\n                id=\"find\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]\"\r\n                onChange={(ev) => { ev.preventDefault(); handleChangeFindInput(ev) }}\r\n                ></input>\r\n     </>   )\r\n};\r\n\r\nFilter.propTypes = {\r\n    handleChangeFindInput: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactsList from \"./components/ContactsList.jsx\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter.jsx\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    const data = localStorage.getItem(\"contacts\");\n    if (data) { return JSON.parse(data) } else { return [] }\n  });\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => { localStorage.setItem(\"contacts\", JSON.stringify(contacts)) }, [contacts])\n\n  const handleSubmit = (name, number) => {\n    if (!contacts.find((el) => el.name === name)) {\n      setContacts(prev => [...prev, { name, number, id: uuidv4() }])\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n\n  const handleChangeFindInput = (ev) => {\n    const regExp = new RegExp(`^${ev.target.value.toLowerCase()}`);\n    setFilter(regExp)\n  };\n\n  const handleFilter = () => {\n    console.table(contacts);\n    return contacts.filter((el) => {\n      const arr = el.name.toLowerCase().split(\" \");\n\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i].toLowerCase().match(filter) !== null) {\n          return true;\n        }\n      }\n      return false;\n    });\n  };\n\n  const handleDelete = (ev) => {\n    setContacts((prev => (prev.filter((elem) => elem.id !== ev.target.id))))\n  };\n\n  return (\n    <>\n      <div>\n        <h1>Phonebook</h1>\n\n        <ContactForm\n          handleSubmit={handleSubmit} />\n\n        <h2>Contacts</h2>\n        <Filter handleChangeFindInput={handleChangeFindInput} />\n\n        <ContactsList\n          contacts={handleFilter()}\n          handleDelete={handleDelete} />\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsList_form__1ipfz\",\"input\":\"ContactsList_input__26asx\",\"label\":\"ContactsList_label__2xe74\",\"button\":\"ContactsList_button__27exx\",\"list\":\"ContactsList_list__2yjxc\",\"listItem\":\"ContactsList_listItem__1WYoP\",\"deleteButton\":\"ContactsList_deleteButton__1XWPm\"};"],"sourceRoot":""}